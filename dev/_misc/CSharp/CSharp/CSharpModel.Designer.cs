//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CSharpModel", "ClassAccessModifier", "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CSharp.Class), "AccessModifier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSharp.AccessModifier))]
[assembly: EdmRelationshipAttribute("CSharpModel", "ClassMethod", "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSharp.Class), "Method", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CSharp.Method), true)]
[assembly: EdmRelationshipAttribute("CSharpModel", "MethodAccessModifier", "Method", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CSharp.Method), "AccessModifier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSharp.AccessModifier), true)]
[assembly: EdmRelationshipAttribute("CSharpModel", "MethodParameter", "Method", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSharp.Method), "Parameter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CSharp.Parameter), true)]
[assembly: EdmRelationshipAttribute("CSharpModel", "ClassParameter", "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSharp.Class), "Parameter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CSharp.Parameter), true)]
[assembly: EdmRelationshipAttribute("CSharpModel", "ClassClass", "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CSharp.Class), "Class1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CSharp.Class), true)]
[assembly: EdmRelationshipAttribute("CSharpModel", "ClassReturnType", "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSharp.Class), "ReturnType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CSharp.ReturnType), true)]
[assembly: EdmRelationshipAttribute("CSharpModel", "ReturnTypeMethod", "ReturnType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CSharp.ReturnType), "Method", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSharp.Method))]
[assembly: EdmRelationshipAttribute("CSharpModel", "ClassMember", "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSharp.Class), "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CSharp.Member), true)]
[assembly: EdmRelationshipAttribute("CSharpModel", "AccessModifierMember", "AccessModifier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSharp.AccessModifier), "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CSharp.Member), true)]
[assembly: EdmRelationshipAttribute("CSharpModel", "ClassMemberType", "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSharp.Class), "MemberType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CSharp.MemberType), true)]
[assembly: EdmRelationshipAttribute("CSharpModel", "MemberMemberType", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSharp.Member), "MemberType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSharp.MemberType))]

#endregion

namespace CSharp
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ModelContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ModelContext object using the connection string found in the 'ModelContext' section of the application configuration file.
        /// </summary>
        public ModelContext() : base("name=ModelContext", "ModelContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ModelContext object.
        /// </summary>
        public ModelContext(string connectionString) : base(connectionString, "ModelContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ModelContext object.
        /// </summary>
        public ModelContext(EntityConnection connection) : base(connection, "ModelContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccessModifier> AccessModifierSet
        {
            get
            {
                if ((_AccessModifierSet == null))
                {
                    _AccessModifierSet = base.CreateObjectSet<AccessModifier>("AccessModifierSet");
                }
                return _AccessModifierSet;
            }
        }
        private ObjectSet<AccessModifier> _AccessModifierSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Class> ClassSet
        {
            get
            {
                if ((_ClassSet == null))
                {
                    _ClassSet = base.CreateObjectSet<Class>("ClassSet");
                }
                return _ClassSet;
            }
        }
        private ObjectSet<Class> _ClassSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Method> MethodSet
        {
            get
            {
                if ((_MethodSet == null))
                {
                    _MethodSet = base.CreateObjectSet<Method>("MethodSet");
                }
                return _MethodSet;
            }
        }
        private ObjectSet<Method> _MethodSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Parameter> ParameterSet
        {
            get
            {
                if ((_ParameterSet == null))
                {
                    _ParameterSet = base.CreateObjectSet<Parameter>("ParameterSet");
                }
                return _ParameterSet;
            }
        }
        private ObjectSet<Parameter> _ParameterSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReturnType> ReturnTypeSet
        {
            get
            {
                if ((_ReturnTypeSet == null))
                {
                    _ReturnTypeSet = base.CreateObjectSet<ReturnType>("ReturnTypeSet");
                }
                return _ReturnTypeSet;
            }
        }
        private ObjectSet<ReturnType> _ReturnTypeSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Member> MemberSet
        {
            get
            {
                if ((_MemberSet == null))
                {
                    _MemberSet = base.CreateObjectSet<Member>("MemberSet");
                }
                return _MemberSet;
            }
        }
        private ObjectSet<Member> _MemberSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MemberType> MemberTypeSet
        {
            get
            {
                if ((_MemberTypeSet == null))
                {
                    _MemberTypeSet = base.CreateObjectSet<MemberType>("MemberTypeSet");
                }
                return _MemberTypeSet;
            }
        }
        private ObjectSet<MemberType> _MemberTypeSet;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccessModifierSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccessModifierSet(AccessModifier accessModifier)
        {
            base.AddObject("AccessModifierSet", accessModifier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClassSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClassSet(Class @class)
        {
            base.AddObject("ClassSet", @class);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MethodSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMethodSet(Method method)
        {
            base.AddObject("MethodSet", method);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ParameterSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParameterSet(Parameter parameter)
        {
            base.AddObject("ParameterSet", parameter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReturnTypeSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReturnTypeSet(ReturnType returnType)
        {
            base.AddObject("ReturnTypeSet", returnType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MemberSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMemberSet(Member member)
        {
            base.AddObject("MemberSet", member);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MemberTypeSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMemberTypeSet(MemberType memberType)
        {
            base.AddObject("MemberTypeSet", memberType);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CSharpModel", Name="AccessModifier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccessModifier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccessModifier object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static AccessModifier CreateAccessModifier(global::System.Int32 id, global::System.String name)
        {
            AccessModifier accessModifier = new AccessModifier();
            accessModifier.Id = id;
            accessModifier.Name = name;
            return accessModifier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CSharpModel", Name="Class")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Class : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Class object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Class CreateClass(global::System.Int32 id, global::System.String name)
        {
            Class @class = new Class();
            @class.Id = id;
            @class.Name = name;
            return @class;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private global::System.String _Alias;
        partial void OnAliasChanging(global::System.String value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClassId
        {
            get
            {
                return _ClassId;
            }
            set
            {
                OnClassIdChanging(value);
                ReportPropertyChanging("ClassId");
                _ClassId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClassId");
                OnClassIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ClassId;
        partial void OnClassIdChanging(Nullable<global::System.Int32> value);
        partial void OnClassIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSharpModel", "ClassAccessModifier", "AccessModifier")]
        public AccessModifier AccessModifier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessModifier>("CSharpModel.ClassAccessModifier", "AccessModifier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessModifier>("CSharpModel.ClassAccessModifier", "AccessModifier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccessModifier> AccessModifierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessModifier>("CSharpModel.ClassAccessModifier", "AccessModifier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccessModifier>("CSharpModel.ClassAccessModifier", "AccessModifier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSharpModel", "ClassMethod", "Method")]
        public EntityCollection<Method> Methods
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Method>("CSharpModel.ClassMethod", "Method");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Method>("CSharpModel.ClassMethod", "Method", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSharpModel", "ClassClass", "Class1")]
        public EntityCollection<Class> Children
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Class>("CSharpModel.ClassClass", "Class1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Class>("CSharpModel.ClassClass", "Class1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSharpModel", "ClassClass", "Class")]
        public Class Ancestor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("CSharpModel.ClassClass", "Class").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("CSharpModel.ClassClass", "Class").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Class> AncestorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("CSharpModel.ClassClass", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Class>("CSharpModel.ClassClass", "Class", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSharpModel", "ClassMember", "Member")]
        public EntityCollection<Member> Members
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Member>("CSharpModel.ClassMember", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Member>("CSharpModel.ClassMember", "Member", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CSharpModel", Name="Member")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Member : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Member object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="classId">Initial value of the ClassId property.</param>
        /// <param name="accessModifierId">Initial value of the AccessModifierId property.</param>
        public static Member CreateMember(global::System.Int32 id, global::System.String name, global::System.Int32 classId, global::System.Int32 accessModifierId)
        {
            Member member = new Member();
            member.Id = id;
            member.Name = name;
            member.ClassId = classId;
            member.AccessModifierId = accessModifierId;
            return member;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassId
        {
            get
            {
                return _ClassId;
            }
            set
            {
                OnClassIdChanging(value);
                ReportPropertyChanging("ClassId");
                _ClassId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClassId");
                OnClassIdChanged();
            }
        }
        private global::System.Int32 _ClassId;
        partial void OnClassIdChanging(global::System.Int32 value);
        partial void OnClassIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccessModifierId
        {
            get
            {
                return _AccessModifierId;
            }
            set
            {
                OnAccessModifierIdChanging(value);
                ReportPropertyChanging("AccessModifierId");
                _AccessModifierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessModifierId");
                OnAccessModifierIdChanged();
            }
        }
        private global::System.Int32 _AccessModifierId;
        partial void OnAccessModifierIdChanging(global::System.Int32 value);
        partial void OnAccessModifierIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSharpModel", "ClassMember", "Class")]
        public Class Class
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("CSharpModel.ClassMember", "Class").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("CSharpModel.ClassMember", "Class").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Class> ClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("CSharpModel.ClassMember", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Class>("CSharpModel.ClassMember", "Class", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSharpModel", "AccessModifierMember", "AccessModifier")]
        public AccessModifier AccessModifier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessModifier>("CSharpModel.AccessModifierMember", "AccessModifier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessModifier>("CSharpModel.AccessModifierMember", "AccessModifier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccessModifier> AccessModifierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessModifier>("CSharpModel.AccessModifierMember", "AccessModifier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccessModifier>("CSharpModel.AccessModifierMember", "AccessModifier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSharpModel", "MemberMemberType", "MemberType")]
        public MemberType MemberType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MemberType>("CSharpModel.MemberMemberType", "MemberType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MemberType>("CSharpModel.MemberMemberType", "MemberType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MemberType> MemberTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MemberType>("CSharpModel.MemberMemberType", "MemberType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MemberType>("CSharpModel.MemberMemberType", "MemberType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CSharpModel", Name="MemberType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MemberType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MemberType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="classId">Initial value of the ClassId property.</param>
        public static MemberType CreateMemberType(global::System.Int32 id, global::System.Int32 classId)
        {
            MemberType memberType = new MemberType();
            memberType.Id = id;
            memberType.ClassId = classId;
            return memberType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassId
        {
            get
            {
                return _ClassId;
            }
            set
            {
                OnClassIdChanging(value);
                ReportPropertyChanging("ClassId");
                _ClassId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClassId");
                OnClassIdChanged();
            }
        }
        private global::System.Int32 _ClassId;
        partial void OnClassIdChanging(global::System.Int32 value);
        partial void OnClassIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSharpModel", "ClassMemberType", "Class")]
        public Class Class
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("CSharpModel.ClassMemberType", "Class").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("CSharpModel.ClassMemberType", "Class").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Class> ClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("CSharpModel.ClassMemberType", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Class>("CSharpModel.ClassMemberType", "Class", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CSharpModel", Name="Method")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Method : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Method object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="classId">Initial value of the ClassId property.</param>
        /// <param name="accessModifierId">Initial value of the AccessModifierId property.</param>
        public static Method CreateMethod(global::System.Int32 id, global::System.String name, global::System.Int32 classId, global::System.Int32 accessModifierId)
        {
            Method method = new Method();
            method.Id = id;
            method.Name = name;
            method.ClassId = classId;
            method.AccessModifierId = accessModifierId;
            return method;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassId
        {
            get
            {
                return _ClassId;
            }
            set
            {
                OnClassIdChanging(value);
                ReportPropertyChanging("ClassId");
                _ClassId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClassId");
                OnClassIdChanged();
            }
        }
        private global::System.Int32 _ClassId;
        partial void OnClassIdChanging(global::System.Int32 value);
        partial void OnClassIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccessModifierId
        {
            get
            {
                return _AccessModifierId;
            }
            set
            {
                OnAccessModifierIdChanging(value);
                ReportPropertyChanging("AccessModifierId");
                _AccessModifierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessModifierId");
                OnAccessModifierIdChanged();
            }
        }
        private global::System.Int32 _AccessModifierId;
        partial void OnAccessModifierIdChanging(global::System.Int32 value);
        partial void OnAccessModifierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSharpModel", "ClassMethod", "Class")]
        public Class Class
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("CSharpModel.ClassMethod", "Class").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("CSharpModel.ClassMethod", "Class").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Class> ClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("CSharpModel.ClassMethod", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Class>("CSharpModel.ClassMethod", "Class", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSharpModel", "MethodAccessModifier", "AccessModifier")]
        public AccessModifier AccessModifier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessModifier>("CSharpModel.MethodAccessModifier", "AccessModifier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessModifier>("CSharpModel.MethodAccessModifier", "AccessModifier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccessModifier> AccessModifierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessModifier>("CSharpModel.MethodAccessModifier", "AccessModifier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccessModifier>("CSharpModel.MethodAccessModifier", "AccessModifier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSharpModel", "MethodParameter", "Parameter")]
        public EntityCollection<Parameter> Parameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Parameter>("CSharpModel.MethodParameter", "Parameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Parameter>("CSharpModel.MethodParameter", "Parameter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSharpModel", "ReturnTypeMethod", "ReturnType")]
        public ReturnType ReturnType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReturnType>("CSharpModel.ReturnTypeMethod", "ReturnType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReturnType>("CSharpModel.ReturnTypeMethod", "ReturnType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReturnType> ReturnTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReturnType>("CSharpModel.ReturnTypeMethod", "ReturnType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReturnType>("CSharpModel.ReturnTypeMethod", "ReturnType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CSharpModel", Name="Parameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Parameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Parameter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="methodId">Initial value of the MethodId property.</param>
        /// <param name="classId">Initial value of the ClassId property.</param>
        /// <param name="orderNmber">Initial value of the OrderNmber property.</param>
        public static Parameter CreateParameter(global::System.Int32 id, global::System.String name, global::System.Int32 methodId, global::System.Int32 classId, global::System.Byte orderNmber)
        {
            Parameter parameter = new Parameter();
            parameter.Id = id;
            parameter.Name = name;
            parameter.MethodId = methodId;
            parameter.ClassId = classId;
            parameter.OrderNmber = orderNmber;
            return parameter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MethodId
        {
            get
            {
                return _MethodId;
            }
            set
            {
                OnMethodIdChanging(value);
                ReportPropertyChanging("MethodId");
                _MethodId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MethodId");
                OnMethodIdChanged();
            }
        }
        private global::System.Int32 _MethodId;
        partial void OnMethodIdChanging(global::System.Int32 value);
        partial void OnMethodIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassId
        {
            get
            {
                return _ClassId;
            }
            set
            {
                OnClassIdChanging(value);
                ReportPropertyChanging("ClassId");
                _ClassId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClassId");
                OnClassIdChanged();
            }
        }
        private global::System.Int32 _ClassId;
        partial void OnClassIdChanging(global::System.Int32 value);
        partial void OnClassIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte OrderNmber
        {
            get
            {
                return _OrderNmber;
            }
            set
            {
                OnOrderNmberChanging(value);
                ReportPropertyChanging("OrderNmber");
                _OrderNmber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNmber");
                OnOrderNmberChanged();
            }
        }
        private global::System.Byte _OrderNmber;
        partial void OnOrderNmberChanging(global::System.Byte value);
        partial void OnOrderNmberChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSharpModel", "ClassParameter", "Class")]
        public Class Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("CSharpModel.ClassParameter", "Class").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("CSharpModel.ClassParameter", "Class").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Class> TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("CSharpModel.ClassParameter", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Class>("CSharpModel.ClassParameter", "Class", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CSharpModel", Name="ReturnType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReturnType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReturnType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="classId">Initial value of the ClassId property.</param>
        public static ReturnType CreateReturnType(global::System.Int32 id, global::System.Int32 classId)
        {
            ReturnType returnType = new ReturnType();
            returnType.Id = id;
            returnType.ClassId = classId;
            return returnType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassId
        {
            get
            {
                return _ClassId;
            }
            set
            {
                OnClassIdChanging(value);
                ReportPropertyChanging("ClassId");
                _ClassId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClassId");
                OnClassIdChanged();
            }
        }
        private global::System.Int32 _ClassId;
        partial void OnClassIdChanging(global::System.Int32 value);
        partial void OnClassIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSharpModel", "ClassReturnType", "Class")]
        public Class Class
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("CSharpModel.ClassReturnType", "Class").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("CSharpModel.ClassReturnType", "Class").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Class> ClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("CSharpModel.ClassReturnType", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Class>("CSharpModel.ClassReturnType", "Class", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
