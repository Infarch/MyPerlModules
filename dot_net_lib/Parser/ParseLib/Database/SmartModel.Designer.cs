//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SmartModel", "BrandDescription", "Brand", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ParseLib.Database.Brand), "Description", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ParseLib.Database.Description))]
[assembly: EdmRelationshipAttribute("SmartModel", "ProductDescription", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ParseLib.Database.Product), "Description", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ParseLib.Database.Description))]
[assembly: EdmRelationshipAttribute("SmartModel", "CategoryDescription", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ParseLib.Database.Category), "Description", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ParseLib.Database.Description))]
[assembly: EdmRelationshipAttribute("SmartModel", "ProductCategory", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ParseLib.Database.Product), "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ParseLib.Database.Category))]
[assembly: EdmRelationshipAttribute("SmartModel", "ProductBrand", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ParseLib.Database.Product), "Brand", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ParseLib.Database.Brand))]
[assembly: EdmRelationshipAttribute("SmartModel", "CategoryCategory", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ParseLib.Database.Category), "Category1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ParseLib.Database.Category), true)]
[assembly: EdmRelationshipAttribute("SmartModel", "FeatureFeatureGroup", "Feature", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ParseLib.Database.Feature), "FeatureGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ParseLib.Database.FeatureGroup))]
[assembly: EdmRelationshipAttribute("SmartModel", "FeatureValueFeature", "FeatureValue", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ParseLib.Database.FeatureValue), "Feature", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ParseLib.Database.Feature))]
[assembly: EdmRelationshipAttribute("SmartModel", "FeatureValueProduct", "FeatureValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ParseLib.Database.FeatureValue), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ParseLib.Database.Product), true)]
[assembly: EdmRelationshipAttribute("SmartModel", "DescriptionFileDescription", "DescriptionFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ParseLib.Database.DescriptionFile), "Description", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ParseLib.Database.Description), true)]
[assembly: EdmRelationshipAttribute("SmartModel", "DescriptionFileFile", "DescriptionFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ParseLib.Database.DescriptionFile), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ParseLib.Database.File), true)]
[assembly: EdmRelationshipAttribute("SmartModel", "BrandFile", "Brand", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ParseLib.Database.Brand), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ParseLib.Database.File), true)]
[assembly: EdmRelationshipAttribute("SmartModel", "CategoryFile", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ParseLib.Database.Category), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ParseLib.Database.File), true)]
[assembly: EdmRelationshipAttribute("SmartModel", "ProductFileProduct", "ProductFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ParseLib.Database.ProductFile), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ParseLib.Database.Product), true)]
[assembly: EdmRelationshipAttribute("SmartModel", "ProductFileFile", "ProductFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ParseLib.Database.ProductFile), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ParseLib.Database.File), true)]

#endregion

namespace ParseLib.Database
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SmartModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SmartModelContainer object using the connection string found in the 'SmartModelContainer' section of the application configuration file.
        /// </summary>
        public SmartModelContainer() : base("name=SmartModelContainer", "SmartModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SmartModelContainer object.
        /// </summary>
        public SmartModelContainer(string connectionString) : base(connectionString, "SmartModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SmartModelContainer object.
        /// </summary>
        public SmartModelContainer(EntityConnection connection) : base(connection, "SmartModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WebResource> WebResourceSet
        {
            get
            {
                if ((_WebResourceSet == null))
                {
                    _WebResourceSet = base.CreateObjectSet<WebResource>("WebResourceSet");
                }
                return _WebResourceSet;
            }
        }
        private ObjectSet<WebResource> _WebResourceSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Description> Descriptions
        {
            get
            {
                if ((_Descriptions == null))
                {
                    _Descriptions = base.CreateObjectSet<Description>("Descriptions");
                }
                return _Descriptions;
            }
        }
        private ObjectSet<Description> _Descriptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeatureGroup> PropertyGroups
        {
            get
            {
                if ((_PropertyGroups == null))
                {
                    _PropertyGroups = base.CreateObjectSet<FeatureGroup>("PropertyGroups");
                }
                return _PropertyGroups;
            }
        }
        private ObjectSet<FeatureGroup> _PropertyGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Feature> Features
        {
            get
            {
                if ((_Features == null))
                {
                    _Features = base.CreateObjectSet<Feature>("Features");
                }
                return _Features;
            }
        }
        private ObjectSet<Feature> _Features;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeatureValue> FeatureValues
        {
            get
            {
                if ((_FeatureValues == null))
                {
                    _FeatureValues = base.CreateObjectSet<FeatureValue>("FeatureValues");
                }
                return _FeatureValues;
            }
        }
        private ObjectSet<FeatureValue> _FeatureValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DescriptionFile> DescriptionFiles
        {
            get
            {
                if ((_DescriptionFiles == null))
                {
                    _DescriptionFiles = base.CreateObjectSet<DescriptionFile>("DescriptionFiles");
                }
                return _DescriptionFiles;
            }
        }
        private ObjectSet<DescriptionFile> _DescriptionFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductFile> ProductFiles
        {
            get
            {
                if ((_ProductFiles == null))
                {
                    _ProductFiles = base.CreateObjectSet<ProductFile>("ProductFiles");
                }
                return _ProductFiles;
            }
        }
        private ObjectSet<ProductFile> _ProductFiles;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WebResourceSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWebResourceSet(WebResource webResource)
        {
            base.AddObject("WebResourceSet", webResource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Descriptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDescriptions(Description description)
        {
            base.AddObject("Descriptions", description);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyGroups(FeatureGroup featureGroup)
        {
            base.AddObject("PropertyGroups", featureGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Features EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeatures(Feature feature)
        {
            base.AddObject("Features", feature);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeatureValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeatureValues(FeatureValue featureValue)
        {
            base.AddObject("FeatureValues", featureValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DescriptionFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDescriptionFiles(DescriptionFile descriptionFile)
        {
            base.AddObject("DescriptionFiles", descriptionFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductFiles(ProductFile productFile)
        {
            base.AddObject("ProductFiles", productFile);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SmartModel", Name="Brand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Brand : WebPage
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Brand object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Brand CreateBrand(global::System.Int32 id, global::System.String url, global::System.Byte status)
        {
            Brand brand = new Brand();
            brand.Id = id;
            brand.Url = url;
            brand.Status = status;
            return brand;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FileId
        {
            get
            {
                return _FileId;
            }
            set
            {
                OnFileIdChanging(value);
                ReportPropertyChanging("FileId");
                _FileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileId");
                OnFileIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FileId;
        partial void OnFileIdChanging(Nullable<global::System.Int32> value);
        partial void OnFileIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SmartModel", "BrandDescription", "Description")]
        public Description Description
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Description>("SmartModel.BrandDescription", "Description").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Description>("SmartModel.BrandDescription", "Description").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Description> DescriptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Description>("SmartModel.BrandDescription", "Description");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Description>("SmartModel.BrandDescription", "Description", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SmartModel", "ProductBrand", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SmartModel.ProductBrand", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SmartModel.ProductBrand", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SmartModel", "BrandFile", "File")]
        public File LogoFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SmartModel.BrandFile", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SmartModel.BrandFile", "File").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> LogoFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SmartModel.BrandFile", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("SmartModel.BrandFile", "File", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SmartModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : WebPage
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="level">Initial value of the Level property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.String url, global::System.Byte status, global::System.Int16 level)
        {
            Category category = new Category();
            category.Id = id;
            category.Url = url;
            category.Status = status;
            category.Level = level;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Page
        {
            get
            {
                return _Page;
            }
            set
            {
                OnPageChanging(value);
                ReportPropertyChanging("Page");
                _Page = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Page");
                OnPageChanged();
            }
        }
        private global::System.Int16 _Page = 1;
        partial void OnPageChanging(global::System.Int16 value);
        partial void OnPageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.Int16 _Level;
        partial void OnLevelChanging(global::System.Int16 value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryId;
        partial void OnCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FileId
        {
            get
            {
                return _FileId;
            }
            set
            {
                OnFileIdChanging(value);
                ReportPropertyChanging("FileId");
                _FileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileId");
                OnFileIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FileId;
        partial void OnFileIdChanging(Nullable<global::System.Int32> value);
        partial void OnFileIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SmartModel", "CategoryDescription", "Description")]
        public Description Description
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Description>("SmartModel.CategoryDescription", "Description").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Description>("SmartModel.CategoryDescription", "Description").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Description> DescriptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Description>("SmartModel.CategoryDescription", "Description");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Description>("SmartModel.CategoryDescription", "Description", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SmartModel", "ProductCategory", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SmartModel.ProductCategory", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SmartModel.ProductCategory", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SmartModel", "CategoryCategory", "Category1")]
        public EntityCollection<Category> ChildCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("SmartModel.CategoryCategory", "Category1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("SmartModel.CategoryCategory", "Category1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SmartModel", "CategoryCategory", "Category")]
        public Category ParentCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SmartModel.CategoryCategory", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SmartModel.CategoryCategory", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> ParentCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SmartModel.CategoryCategory", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("SmartModel.CategoryCategory", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SmartModel", "CategoryFile", "File")]
        public File ThumbnailFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SmartModel.CategoryFile", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SmartModel.CategoryFile", "File").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> ThumbnailFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SmartModel.CategoryFile", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("SmartModel.CategoryFile", "File", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SmartModel", Name="Description")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Description : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Description object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static Description CreateDescription(global::System.Int32 id, global::System.String text)
        {
            Description description = new Description();
            description.Id = id;
            description.Text = text;
            return description;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SmartModel", "DescriptionFileDescription", "DescriptionFile")]
        public EntityCollection<DescriptionFile> DescriptionFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DescriptionFile>("SmartModel.DescriptionFileDescription", "DescriptionFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DescriptionFile>("SmartModel.DescriptionFileDescription", "DescriptionFile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SmartModel", Name="DescriptionFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DescriptionFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DescriptionFile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="descriptionId">Initial value of the DescriptionId property.</param>
        /// <param name="fileId">Initial value of the FileId property.</param>
        public static DescriptionFile CreateDescriptionFile(global::System.Int32 id, global::System.Int32 descriptionId, global::System.Int32 fileId)
        {
            DescriptionFile descriptionFile = new DescriptionFile();
            descriptionFile.Id = id;
            descriptionFile.DescriptionId = descriptionId;
            descriptionFile.FileId = fileId;
            return descriptionFile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DescriptionId
        {
            get
            {
                return _DescriptionId;
            }
            set
            {
                OnDescriptionIdChanging(value);
                ReportPropertyChanging("DescriptionId");
                _DescriptionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DescriptionId");
                OnDescriptionIdChanged();
            }
        }
        private global::System.Int32 _DescriptionId;
        partial void OnDescriptionIdChanging(global::System.Int32 value);
        partial void OnDescriptionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileId
        {
            get
            {
                return _FileId;
            }
            set
            {
                OnFileIdChanging(value);
                ReportPropertyChanging("FileId");
                _FileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileId");
                OnFileIdChanged();
            }
        }
        private global::System.Int32 _FileId;
        partial void OnFileIdChanging(global::System.Int32 value);
        partial void OnFileIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SmartModel", "DescriptionFileFile", "File")]
        public File File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SmartModel.DescriptionFileFile", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SmartModel.DescriptionFileFile", "File").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SmartModel.DescriptionFileFile", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("SmartModel.DescriptionFileFile", "File", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SmartModel", Name="Feature")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Feature : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Feature object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Feature CreateFeature(global::System.Int32 id, global::System.String name)
        {
            Feature feature = new Feature();
            feature.Id = id;
            feature.Name = name;
            return feature;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMultiple
        {
            get
            {
                return _IsMultiple;
            }
            set
            {
                OnIsMultipleChanging(value);
                ReportPropertyChanging("IsMultiple");
                _IsMultiple = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMultiple");
                OnIsMultipleChanged();
            }
        }
        private global::System.Boolean _IsMultiple = false;
        partial void OnIsMultipleChanging(global::System.Boolean value);
        partial void OnIsMultipleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SmartModel", "FeatureFeatureGroup", "FeatureGroup")]
        public FeatureGroup Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeatureGroup>("SmartModel.FeatureFeatureGroup", "FeatureGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeatureGroup>("SmartModel.FeatureFeatureGroup", "FeatureGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeatureGroup> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeatureGroup>("SmartModel.FeatureFeatureGroup", "FeatureGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeatureGroup>("SmartModel.FeatureFeatureGroup", "FeatureGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SmartModel", Name="FeatureGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeatureGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeatureGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FeatureGroup CreateFeatureGroup(global::System.Int32 id, global::System.String name)
        {
            FeatureGroup featureGroup = new FeatureGroup();
            featureGroup.Id = id;
            featureGroup.Name = name;
            return featureGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SmartModel", "FeatureFeatureGroup", "Feature")]
        public EntityCollection<Feature> Features
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Feature>("SmartModel.FeatureFeatureGroup", "Feature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Feature>("SmartModel.FeatureFeatureGroup", "Feature", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SmartModel", Name="FeatureValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeatureValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeatureValue object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        public static FeatureValue CreateFeatureValue(global::System.Int32 id, global::System.String data, global::System.Int32 productId)
        {
            FeatureValue featureValue = new FeatureValue();
            featureValue.Id = id;
            featureValue.Data = data;
            featureValue.ProductId = productId;
            return featureValue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SmartModel", "FeatureValueFeature", "Feature")]
        public Feature Feature
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Feature>("SmartModel.FeatureValueFeature", "Feature").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Feature>("SmartModel.FeatureValueFeature", "Feature").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Feature> FeatureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Feature>("SmartModel.FeatureValueFeature", "Feature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Feature>("SmartModel.FeatureValueFeature", "Feature", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SmartModel", "FeatureValueProduct", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("SmartModel.FeatureValueProduct", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("SmartModel.FeatureValueProduct", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("SmartModel.FeatureValueProduct", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("SmartModel.FeatureValueProduct", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SmartModel", Name="File")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class File : WebResource
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new File object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static File CreateFile(global::System.Int32 id, global::System.String url, global::System.Byte status)
        {
            File file = new File();
            file.Id = id;
            file.Url = url;
            file.Status = status;
            return file;
        }

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SmartModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : WebPage
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Product CreateProduct(global::System.Int32 id, global::System.String url, global::System.Byte status)
        {
            Product product = new Product();
            product.Id = id;
            product.Url = url;
            product.Status = status;
            return product;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sku
        {
            get
            {
                return _Sku;
            }
            set
            {
                OnSkuChanging(value);
                ReportPropertyChanging("Sku");
                _Sku = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sku");
                OnSkuChanged();
            }
        }
        private global::System.String _Sku;
        partial void OnSkuChanging(global::System.String value);
        partial void OnSkuChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ListPrice
        {
            get
            {
                return _ListPrice;
            }
            set
            {
                OnListPriceChanging(value);
                ReportPropertyChanging("ListPrice");
                _ListPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListPrice");
                OnListPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _ListPrice;
        partial void OnListPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnListPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int16> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int16> value);
        partial void OnQuantityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SmartModel", "ProductDescription", "Description")]
        public Description Description
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Description>("SmartModel.ProductDescription", "Description").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Description>("SmartModel.ProductDescription", "Description").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Description> DescriptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Description>("SmartModel.ProductDescription", "Description");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Description>("SmartModel.ProductDescription", "Description", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SmartModel", "ProductCategory", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SmartModel.ProductCategory", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SmartModel.ProductCategory", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SmartModel.ProductCategory", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("SmartModel.ProductCategory", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SmartModel", "ProductBrand", "Brand")]
        public Brand Brand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("SmartModel.ProductBrand", "Brand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("SmartModel.ProductBrand", "Brand").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Brand> BrandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("SmartModel.ProductBrand", "Brand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Brand>("SmartModel.ProductBrand", "Brand", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SmartModel", "FeatureValueProduct", "FeatureValue")]
        public EntityCollection<FeatureValue> FeatureValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeatureValue>("SmartModel.FeatureValueProduct", "FeatureValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeatureValue>("SmartModel.FeatureValueProduct", "FeatureValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SmartModel", "ProductFileProduct", "ProductFile")]
        public EntityCollection<ProductFile> ProductFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductFile>("SmartModel.ProductFileProduct", "ProductFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductFile>("SmartModel.ProductFileProduct", "ProductFile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SmartModel", Name="ProductFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductFile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="isImage">Initial value of the IsImage property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="fileId">Initial value of the FileId property.</param>
        public static ProductFile CreateProductFile(global::System.Int32 id, global::System.String isImage, global::System.Int32 productId, global::System.Int32 fileId)
        {
            ProductFile productFile = new ProductFile();
            productFile.Id = id;
            productFile.IsImage = isImage;
            productFile.ProductId = productId;
            productFile.FileId = fileId;
            return productFile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IsImage
        {
            get
            {
                return _IsImage;
            }
            set
            {
                OnIsImageChanging(value);
                ReportPropertyChanging("IsImage");
                _IsImage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IsImage");
                OnIsImageChanged();
            }
        }
        private global::System.String _IsImage;
        partial void OnIsImageChanging(global::System.String value);
        partial void OnIsImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileId
        {
            get
            {
                return _FileId;
            }
            set
            {
                OnFileIdChanging(value);
                ReportPropertyChanging("FileId");
                _FileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileId");
                OnFileIdChanged();
            }
        }
        private global::System.Int32 _FileId;
        partial void OnFileIdChanging(global::System.Int32 value);
        partial void OnFileIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SmartModel", "ProductFileFile", "File")]
        public File File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SmartModel.ProductFileFile", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SmartModel.ProductFileFile", "File").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SmartModel.ProductFileFile", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("SmartModel.ProductFileFile", "File", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SmartModel", Name="WebPage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Brand))]
    [KnownTypeAttribute(typeof(Product))]
    [KnownTypeAttribute(typeof(Category))]
    public partial class WebPage : WebResource
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WebPage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static WebPage CreateWebPage(global::System.Int32 id, global::System.String url, global::System.Byte status)
        {
            WebPage webPage = new WebPage();
            webPage.Id = id;
            webPage.Url = url;
            webPage.Status = status;
            return webPage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaKeywords
        {
            get
            {
                return _MetaKeywords;
            }
            set
            {
                OnMetaKeywordsChanging(value);
                ReportPropertyChanging("MetaKeywords");
                _MetaKeywords = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaKeywords");
                OnMetaKeywordsChanged();
            }
        }
        private global::System.String _MetaKeywords;
        partial void OnMetaKeywordsChanging(global::System.String value);
        partial void OnMetaKeywordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaDescription
        {
            get
            {
                return _MetaDescription;
            }
            set
            {
                OnMetaDescriptionChanging(value);
                ReportPropertyChanging("MetaDescription");
                _MetaDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaDescription");
                OnMetaDescriptionChanged();
            }
        }
        private global::System.String _MetaDescription;
        partial void OnMetaDescriptionChanging(global::System.String value);
        partial void OnMetaDescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SmartModel", Name="WebResource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(WebPage))]
    [KnownTypeAttribute(typeof(File))]
    public abstract partial class WebResource : EntityObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Byte _Status;
        partial void OnStatusChanging(global::System.Byte value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Errors
        {
            get
            {
                return _Errors;
            }
            set
            {
                OnErrorsChanging(value);
                ReportPropertyChanging("Errors");
                _Errors = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Errors");
                OnErrorsChanged();
            }
        }
        private global::System.Byte _Errors = 0;
        partial void OnErrorsChanging(global::System.Byte value);
        partial void OnErrorsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }

    #endregion
    
}
